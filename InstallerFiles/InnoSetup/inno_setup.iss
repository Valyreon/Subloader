; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Subloader"
#define MyAppVersion "1.6"
#define MyAppPublisher "Valyreon"
#define MyAppURL "https://github.com/Valyreon/Subloader"
#define MyAppExeName "Subloader.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{F15A11C1-B5EA-423C-8EA4-3FD462C0C30F}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
DisableProgramGroupPage=yes
LicenseFile=licence.txt
; Uncomment the following line to run in non administrative install mode (install for current user only.)
PrivilegesRequired=admin
OutputBaseFilename=SubloaderV160
Compression=lzma
SolidCompression=yes
WizardStyle=modern
ArchitecturesInstallIn64BitMode=x64
SetupIconFile=icon.ico

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "D:\Repositories\Subloader\SubloaderWpf\bin\Release\PUBLISH\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "set_path.ps1"; DestDir: "{tmp}";
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Components]
Name: "main"; Description: "Main Files"; Types: full compact custom; Flags: fixed
Name: "context_menu"; Description: "Add to context menu (.avi, .mp4 and .mkv files)"; Types: full compact
Name: "cli"; Description: "Command Line Interface (Installs CLI executable and adds it to Path env variable)"; Types: full

[Run]
Filename: "powershell.exe"; Parameters: "-ExecutionPolicy Bypass -File ""{tmp}/set_path.ps1"" ""{app}"" "; Flags: runhidden; Check: ShouldAddToPathEnvVar

[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Code]
function ShouldAddToPathEnvVar: Boolean;
begin
  Result := IsComponentSelected('cli');
end;

procedure UpdateStatusLabel(StepText: String);
begin
  WizardForm.StatusLabel.Caption := StepText;
end;

procedure CurStepChanged(CurStep: TSetupStep);
begin
  if CurStep = ssPostInstall then
  begin
    if WizardIsComponentSelected('context_menu') then
    begin
      UpdateStatusLabel('Adding entry to context menu...');
      // AVI
      RegWriteStringValue(HKCR, 'SystemFileAssociations\.avi\shell\Subloader', '', 'Find subtitles');
      RegWriteStringValue(HKCR, 'SystemFileAssociations\.avi\shell\Subloader', 'Icon', WizardDirValue + '\Subloader.exe');
      RegWriteStringValue(HKCR, 'SystemFileAssociations\.avi\shell\Subloader\command', '', '"' + WizardDirValue + '\Subloader.exe' + '" ' + '"%1"');
      // MP4
      RegWriteStringValue(HKCR, 'SystemFileAssociations\.mp4\shell\Subloader', '', 'Find subtitles');
      RegWriteStringValue(HKCR, 'SystemFileAssociations\.mp4\shell\Subloader', 'Icon', WizardDirValue + '\Subloader.exe');
      RegWriteStringValue(HKCR, 'SystemFileAssociations\.mp4\shell\Subloader\command', '', '"' + WizardDirValue + '\Subloader.exe' + '" ' + '"%1"');
      // MKV
      RegWriteStringValue(HKCR, 'SystemFileAssociations\.mkv\shell\Subloader', '', 'Find subtitles');
      RegWriteStringValue(HKCR, 'SystemFileAssociations\.mkv\shell\Subloader', 'Icon', WizardDirValue + '\Subloader.exe');
      RegWriteStringValue(HKCR, 'SystemFileAssociations\.mkv\shell\Subloader\command', '', '"' + WizardDirValue + '\Subloader.exe' + '" ' + '"%1"');
    end;

    if WizardIsComponentSelected('cli') then
    begin
      UpdateStatusLabel('Adding installation directory to PATH variable...');
    end;
  end;
end;

